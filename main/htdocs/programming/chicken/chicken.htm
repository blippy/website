<html><head>
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
  <LINK REL=StyleSheet HREF="../../style.css" TYPE="text/css">
  <title>chicken scheme</title></head>
<body>


<a href="../../index.html">Home</a> : <a href="../programming.htm">programming</a>

<h1>Chicken Scheme</h1>

<hr><h2>Compiling/interpretation mode</h2>

You can tell whether you are compiling or interpreting by using:
<pre>
(cond-expand (compiling (write "I'm compiling"))
             (else (write "I'm not compiling")))
</pre>
It seems that you need an <code>else</code> clause. So, for writing a driver for a main function in might look like this:
<pre>
(define (my-main) ...)
(cond-expand (compiling (my-main))
             (else #f))
</pre>
Feature existence via <a href="http://api.call-cc.org/doc/chicken/special-forms/cond-expand">cond-expand</a> is contained in <code>SRFI-0</code>, and it is automatically included in chicken.


<hr><h2>Dates</h2>

Print current date in YYY-MM-DD format:
<pre>
   (use srfi-19)
   (format-date "~Y-~m-~d" (current-date))
</pre>

<hr><h2>Files</h2>

Slurp file:
<pre>
   (use utils)
   (read-all filename)
</pre>




<hr><h2>Setting the prompt</h2>

<pre>(repl-prompt (lambda () "my-prompt> "))</pre>


<hr><h2>Also on this site</h2>

<li><a href="eggs.htm">eggs</a> - interesting eggs for you to consider

<li><a href="format.htm">format</a> - various recipes

<li><a href="large.htm">large</a> - programming "in the large" - i.e. modularisation and packaging

<li><a href="macros.htm">macros</a>

<li><a href="web.htm">web</a> - webscraping and html processing

<hr><pre>
Author:  Mark Carter
Created: 15-Mar-2012
Updated: 30-Oct-2012
</small>
</body>
</html>
