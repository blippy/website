<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html><head>
<meta http-equiv="CONTENT-TYPE" content="text/html; charset=iso-8859-1">
<title>access</title>
</head>
<body>


<a href="../../index.html">Home</a> : 
<a href="../programming.htm">programming</a>  :
<a href="vba.htm">vba</a>

<h1>Database Access using VBA</h1>
The following gives an example of accessing an Oracle database - but it
applies equally well to any ADODB connection<br>
<br>
<pre>Public Sub QueryOracle()<br><br> Dim conn As ADODB.Connection<br> Set conn = New ADODB.Connection<br> ConnString = "DSN=MyDatabase;PASSWORD=scott" # see note 1 below<br> conn.Open ConnString<br> <br> Dim cmd As ADODB.Command<br> Set cmd = New ADODB.Command<br> Set cmd.ActiveConnection = conn<br> cmd.CommandType = adCmdText<br> cmd.CommandText = "SELECT * FROM EMP;"<br> <br> Dim rs As ADODB.Recordset<br> Set rs = New ADODB.Recordset<br> Set rs = cmd.Execute<br> <br> If Not (rs.EOF Or rs.BOF) Then rs.MoveFirst<br> While Not (rs.EOF Or rs.BOF)<br> Debug.Print rs!ENAME 'or use something like rs.fields(FieldName)<br> rs.MoveNext<br> Wend<br><br> rs.Close<br> conn.Close<br>End Sub</pre>
<h2>&nbsp;</h2>
<hr style="width: 100%; height: 2px;">
<h2>Sundry notes</h2>
<h3>Note 1 - Alternative connection strings</h3>
You could connect to an Access database using the following connection
string:
<div style="margin-left: 40px;">conn.ConnectionString
=&nbsp;"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=<span style="font-style: italic;">MyDatabase.mdb</span>;Persist
Security Info=False"<br>
</div>
where of course <span style="font-style: italic;">MyDatabase.mdb
</span>needs to be replaced by the actual name of the database.<br>
<br>
<h3>Note 2 - ADODB addin</h3>
In order to to have access to the ADODB class, you will probably need<br>
* Microsoft ActiveX Data Objects 2.7 Library<br>
The exact version number may or may not be important<br>
<br>
<h3>Note 3 - simple execution</h3>
<br>
Sometimes you may not need to process recordsets, in which case a
simpler way of going about it might be:<br>
<br>
<pre> db_name = whatever<br> Set conn = New ADODB.Connection<br> conn.ConnectionString = _<br> "Provider=Microsoft.Jet.OLEDB.4.0;" &amp; _<br> "Data Source=" &amp; db_name &amp; ";" &amp; _<br> "Persist Security Info=False"<br> conn.Open<br> <br> conn.Execute ("DELETE FROM sometable")<br> conn.Execute ("DROP TABLE sometable")<br><br> conn.Close<br> Set conn = Nothing</pre>
<br><hr style="width: 100%; height: 2px;"><h2>GetRows()</h2>You can use
GetRows() to get all of the rows of a recordset and put them into an
array (declare the variable receiving the rows as a Variant). Some <a href="http://bytes.com/forum/thread515363.html">examples</a> are available.
<hr><small><pre>Author:  Mark Carter<br>Created: 27-Apr-2006<br>Updated: 14-Aug-2008<br></pre></small>
</body></html>
