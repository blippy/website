<!DOCTYPE html PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
  <title>gst</title>
</head>

<body>
<a href="../../index.html">Home</a> : <a href="../programming.htm" >programming</a> : <a href="smalltalk.htm" >smalltalk</a>


<h1>GNU Smalltalk</h1>

A page about GNU Smalltalk - mainly for Ubuntu.

<hr>

<h2>GST 3.0 on Ubuntu Gutsy</h2>

apt-get install tcl8.4-dev tk8.4-dev<br>
Download Smalltalk sources<br>
Compile and install.<br>
Edit your .bashrc file:<br>
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/smalltalk:/usr/local/lib<br>
export LD_LIBRARY_PATH<br>
<br>
LD_RUN_PATH=/usr/local/lib/smalltalk<br>
export LD_RUN_PATH<br>
<br>
<br>
cp&nbsp;/usr/local/var/lib/smalltalk/gst.im
~<br>gst -I ~/gst.im<br><br>To get a graphical environment going:<br>gst-blox -I ~/gst.im<br>


<hr><h2>Dynamic manipulation of classes</h2>

If you have a class called <code>Foo</code> , then you can do things like

<pre>Foo category: 'MCarter' . 
Foo classVariableNames: 'blah' . 
Foo addClassVarName: 'hifive' .
Smalltalk removeClass: 'Foo' . " ... actually I think its difficult to delete a class" </pre>


<hr><h2>GUI</h2>

Example code to create a GUI:

<pre>win := BLOX.BWindow new: 'Example' .
c := BLOX.BContainer new: win .
c setVerticalLayout: true.
c defaultHeight: 100 .
c defaultWidth: 100 .
l := BLOX.BLabel new: c label: 'WAITING'. 
b := BLOX.BButton new: c label: 'Click me'. 
b callback: [  l label: 'Hello World' ] message: #value.

win map .
BLOX.Blox dispatchEvents: win . 
'Finished' printNl . </pre>


<hr><h2>Hello world</h2>

Create a file <a href="Hello.st" >Hello.st:</a>
<pre>
Object subclass: #Hello
       instanceVariableNames: ''
       classVariableNames: ''
       poolDictionaries: ''
       category: ''!


"Create a method"
!Hello methodsFor: 'speaking'!
publish
    Transcript show: 'Greetings. '!

! !
</pre>

<h3>Load file</h3>

<pre>
FileStream fileIn: 'Hello.st' !
</pre>


<h3>Execute it</h3>
You can execute it by doing something like:

<pre>Hello new publish</pre>

or in a more complicated way:

<pre>
h := Hello new
h publish
</pre>

<h3>Saving classes as files</h3>

You can load the Parser package
<pre>
PackageLoader fileInPackage: 'Parser'
(File name: 'Hello.st') writeStream fileOut: Hello; close
</pre>

<hr><h2>Networking</h2>

Download a document from the web:

<pre>PackageLoader fileInPackage: 'NetClients'
(FileStream open: 'http://www.gnu.org/' mode: FileStream read) contents</pre>

<a href="http://smalltalk.gnu.org/faq/38" >Link</a>



<hr><h2>Links to External sites</h2>

<a href="http://www.gnu.org/software/smalltalk/manual-base/html_node/index.html#Top" >GNU Smalltalk Library Reference</a>
 - very useful reference of classes and methods. Includes index.

<hr><h2>Exiting</h2>

<pre>ObjectMemory quit !</pre>





<hr><pre>
Author:  Mark Carter
Created: 19-Jan-2008
Updated: 20-Oct-2012
</pre>
</body>
</html>
